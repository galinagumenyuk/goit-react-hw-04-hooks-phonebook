{"version":3,"sources":["App.styled.jsx","components/form/Form.styled.jsx","components/form/Form.jsx","components/contacts/Contacts.styled.jsx","components/contacts/Contacts.jsx","components/filter/Filter.styled.jsx","components/filter/Filter.jsx","App.js","index.js"],"names":["Container","styled","div","ListTitle","p","AddButton","button","Form","props","useState","name","setName","number","setNumber","handleChange","e","target","value","onSubmit","preventDefault","onChange","onValidate","alert","type","pattern","title","required","ContactItem","ul","DeleteButton","Contact","li","Contacts","contacts","onDeleteContact","map","contact","onClick","id","FilterTitle","Filter","App","JSON","parse","localStorage","getItem","setContacts","filter","setFilter","filteredContacts","normalizedFilter","toLowerCase","includes","getFilteredContact","useEffect","setItem","stringify","shortid","generate","prevState","contactName","find","currentTarget","contactId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.57118e58.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const Container = styled.div`\n  width: 700px;\n  margin-left: auto;\n  margin-right: auto;\n  padding: 10px;\n\n  form {\n    border: 2px solid;\n    padding: 10px;\n    display: flex;\n    flex-direction: column;\n  }\n\n  label {\n    color: #708090;\n    font-family: \"Times New Roman\";\n  }\n\n  input {\n    display: block;\n    margin-top: 3px;\n    margin-bottom: 10px;\n  }\n`;\nexport const ListTitle = styled.p`\n  font-weight: 700;\n  font-family: \"Times New Roman\";\n`;\n","import styled from \"@emotion/styled\";\n\nexport const AddButton = styled.button`\nwidth: 85px;\n  display: block;\n  margin-top:5px;\n  padding: 5px;\n  border-radius: 4px\n  border: 1px\n\n  color: #708090;\n  font-family: \"Times New Roman\";\n  font-size: 14px;\n  box-shadow: 1px 1px 2px #000000;\n  cursor: pointer;\n`;\n","import { useState } from \"react\";\nimport { AddButton } from \"./Form.styled\";\n\nexport default function Form(props) {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const handleChange = (e) => {\n    switch (e.target.name) {\n      case \"name\":\n        setName(e.target.value);\n        break;\n      case \"number\":\n        setNumber(e.target.value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    props.onSubmit({ name, number });\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  const disabledButton = () => {\n    if (!props.onValidate(name)) {\n      alert(`${name} is already in contacts`);\n      setName(\"\");\n      setNumber(\"\");\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit} onChange={disabledButton}>\n      <label>\n        name\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          value={name}\n          onChange={handleChange}\n        />\n      </label>\n      <label>\n        number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          value={number}\n          onChange={handleChange}\n        />\n      </label>\n      <AddButton type=\"submit\"> Add contact </AddButton>\n    </form>\n  );\n}\n","import styled from \"@emotion/styled\";\n\nexport const ContactItem = styled.ul`\n  padding-left: 0px;\n`;\n\nexport const DeleteButton = styled.button`\nwidth: 40 px;\n padding: 1px;\n margin-left: 10px;\n  border-radius: 4px\n  border: 1px\n\n  color: #708090;\n  font-family: \"Times New Roman\";\n  font-size: 11px;\n  cursor: pointer;\n`;\n\nexport const Contact = styled.li`\n  list-style-type: none;\n  font-family: \"Times New Roman\";\n  margin-bottom: 5px;\n\n  span + span {\n    margin-left: 15px;\n  }\n`;\n","import React from \"react\";\nimport { ContactItem, DeleteButton, Contact } from \"./Contacts.styled\";\n\nconst Contacts = ({ contacts, onDeleteContact }) => {\n  return (\n    <ContactItem>\n      {contacts.map((contact) => (\n        <Contact key={contact.id}>\n          <span>{contact.name}:</span>\n          <span>{contact.number}</span>\n          <DeleteButton\n            type=\"button\"\n            onClick={() => onDeleteContact(contact.id)}\n          >\n            Delete\n          </DeleteButton>\n        </Contact>\n      ))}\n    </ContactItem>\n  );\n};\n\nexport default Contacts;\n","import styled from \"@emotion/styled\";\n\nexport const FilterTitle = styled.p`\n  font-size: 11px;\n  margin: 0px;\n`;\n","import React from \"react\";\nimport { FilterTitle } from \"./Filter.styled\";\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <div>\n      <FilterTitle>Find contacts by name</FilterTitle>\n      <input type=\"text\" value={value} onChange={onChange}></input>\n    </div>\n  );\n};\n\nexport default Filter;\n","import { Container, ListTitle } from \"./App.styled\";\nimport shortid from \"shortid\";\nimport PropTypes from \"prop-types\";\nimport { useState, useEffect } from \"react\";\nimport Form from \"./components/form/Form.jsx\";\nimport Contacts from \"./components/contacts/Contacts.jsx\";\nimport Filter from \"./components/filter/Filter.jsx\";\n\nexport default function App() {\n  const [contacts, setContacts] = useState(\n    JSON.parse(localStorage.getItem(\"contacts\")) ?? []\n  );\n  const [filter, setFilter] = useState(\"\");\n\n  const addContact = ({ name, number }) => {\n    const contact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n    setContacts((prevState) => [contact, ...prevState]);\n  };\n\n  const handleFilterChange = (e) => {\n    setFilter(e.currentTarget.value);\n  };\n\n  const getFilteredContact = () => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  const filteredContacts = getFilteredContact();\n\n  const deleteContact = (contactId) => {\n    setContacts((prevState) =>\n      prevState.filter((contact) => contact.id !== contactId)\n    );\n  };\n\n  const validateContact = (contactName) => {\n    let isDuplicate = !!contacts.find(\n      (contact) => contact.name === contactName\n    );\n    return !isDuplicate;\n  };\n\n  useEffect(() => {\n    localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n  }, [contacts]);\n\n  return (\n    <Container>\n      <h1>Phonebook</h1>\n      <Form onSubmit={addContact} onValidate={validateContact} />\n      <ListTitle>Contacts</ListTitle>\n      <Filter value={filter} onChange={handleFilterChange} />\n      <Contacts contacts={filteredContacts} onDeleteContact={deleteContact} />\n    </Container>\n  );\n}\n\nApp.propTypes = {\n  contacts: PropTypes.array,\n  value: PropTypes.string,\n  onSubmit: PropTypes.func,\n  onValidate: PropTypes.func,\n  onChange: PropTypes.func,\n  onDeleteContact: PropTypes.func,\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}